#uselib "kernel32.dll"
#func GetTempPathA "GetTempPathA" int, var
#cfunc CreateFileA "CreateFileA" sptr, int, int, int, int, int, int
#func GetFileTime "GetFileTime" int, int, int, int
#func CloseHandle "CloseHandle" int
#func FileTimeToLocalFileTime "FileTimeToLocalFileTime" int, int
#func FileTimeToSystemTime "FileTimeToSystemTime" int, int

#uselib "psapi.dll"
#func EnumProcesses "EnumProcesses" var, int, var

#uselib "vslib.dll"
#cfunc GetLibVersion "_GetLibVersion@0"
#cfunc CheckVsCode "_CheckVsCode@16" int, int, int, int
#func CreateProject "_CreateProject@4" var
#func OpenProject "_OpenProject@8" var, sptr
#func OpenProjectEx "_OpenProjectEx@16" var, sptr, var, int
#func SaveProject "_SaveProject@8" int, sptr
#func DeleteProject "_DeleteProject@4" int
#cfunc GetPrjSampFreq "_GetPrjSampFreq@4" int
#func SetPrjSampFreq "_SetPrjSampFreq@8" int, int
#func GetPrjExpFormat "_GetPrjExpFormat@16" int, var, var, var
#func SetPrjExpFormat "_SetPrjExpFormat@16" int, int, int, int
#func GetPrjMasterVolume "_GetPrjMasterVolume@8" int, var
#func SetPrjMasterVolume "_SetPrjMasterVolume@12" int, double
#cfunc GetPrjMeasure "_GetPrjMeasure@4" int
#func SetPrjMeasure "_SetPrjMeasure@8" int, int
#cfunc GetPrjMeasBase "_GetPrjMeasBase@4" int
#func SetPrjMeasBase "_SetPrjMeasBase@8" int, int
#func GetPrjTempo "_GetPrjTempo@8" int, var
#func SetPrjTempo "_SetPrjTempo@12" int, double
#cfunc GetPrjSaveOption "_GetPrjSaveOption@4" int
#func SetPrjSaveOption "_SetPrjSaveOption@8" int, int
#cfunc GetTrackNum "_GetTrackNum@4" int
#func AddTrack "_AddTrack@4" int
#func CopyTrack "_CopyTrack@16" int, var, int, int
#func UpTrack "_UpTrack@8" int, int
#func DownTrack "_DownTrack@8" int, int
#func DeleteTrack "_DeleteTrack@8" int, int
#func GetTrackVolume "_GetTrackVolume@12" int, int, var
#func SetTrackVolume "_SetTrackVolume@16" int, int, double
#func GetTrackPan "_GetTrackPan@12" int, int, var
#func SetTrackPan "_SetTrackPan@16" int, int, double
#cfunc GetTrackInvertFlg "_GetTrackInvertFlg@8" int, int
#func SetTrackInvertFlg "_SetTrackInvertFlg@12" int, int, int
#cfunc GetTrackMuteFlg "_GetTrackMuteFlg@8" int, int
#func SetTrackMuteFlg "_SetTrackMuteFlg@12" int, int, int
#cfunc GetTrackSoloFlg "_GetTrackSoloFlg@8" int, int
#func SetTrackSoloFlg "_SetTrackSoloFlg@12" int, int, int
#func GetTrackName "_GetTrackName@12" int, int, var
#func SetTrackName "_SetTrackName@12" int, int, sptr
#cfunc GetTrackColor "_GetTrackColor@8" int, int
#func SetTrackColor "_SetTrackColor@12" int, int, int
#cfunc GetTrackSelFlg "_GetTrackSelFlg@8" int, int
#func SetTrackSelFlg "_SetTrackSelFlg@12" int, int, int
#cfunc GetTrackMorphingGroup "_GetTrackMorphingGroup@8" int, int
#func SetTrackMorphingGroup "_SetTrackMorphingGroup@12" int, int, int
#cfunc GetTrackOption "_GetTrackOption@8" int, int
#func SetTrackOption "_SetTrackOption@12" int, int, int
#cfunc GetPrjItemNum "_GetPrjItemNum@4" int
#func AddPrjItem "_AddPrjItem@12" int, sptr, var
#func CopyPrjItem "_CopyPrjItem@16" int, var, int, int
#func DeletePrjItem "_DeletePrjItem@8" int, int
#cfunc GetPrjItem "_GetPrjItem@8" int, int
#cfunc GetPrjItemTrackNum "_GetPrjItemTrackNum@8" int, int
#func SetPrjItemTrackNum "_SetPrjItemTrackNum@12" int, int, int
#func GetPrjItemOffset "_GetPrjItemOffset@12" int, int, var
#func SetPrjItemOffset "_SetPrjItemOffset@16" int, int, double
#cfunc GetPrjItemOffsetAdd "_GetPrjItemOffsetAdd@8" int, int
#func SetPrjItemOffsetAdd "_SetPrjItemOffsetAdd@12" int, int, int
#cfunc GetPrjItemSelFlg "_GetPrjItemSelFlg@8" int, int
#func SetPrjItemSelFlg "_SetPrjItemSelFlg@12" int, int, int
#cfunc GetPrjItemId "_GetPrjItemId@8" int, int
#cfunc GetItemNumId "_GetItemNumId@8" int, int
#func GetPrjItemFreqA4 "_GetPrjItemFreqA4@12" int, int, var
#func SetPrjItemFreqA4 "_SetPrjItemFreqA4@16" int, int, double
#cfunc GetPrjItemKey "_GetPrjItemKey@8" int, int
#func SetPrjItemKey "_SetPrjItemKey@12" int, int, int
#cfunc GetPrjItemKeyType "_GetPrjItemKeyType@8" int, int
#func SetPrjItemKeyType "_SetPrjItemKeyType@12" int, int, int
#cfunc GetPrjItemOption "_GetPrjItemOption@8" int, int
#func SetPrjItemOption "_SetPrjItemOption@12" int, int, int
#cfunc GetPrjItemTune "_GetPrjItemTune@8" int, int
#func SetPrjItemTune "_SetPrjItemTune@12" int, int, int
#func GetPrjItemBaseFreq "_GetPrjItemBaseFreq@20" int, int, var, var, var
#func SetPrjItemBaseFreq "_SetPrjItemBaseFreq@24" int, int, int, int, double
#func GetPrjItemMeasOffset "_GetPrjItemMeasOffset@12" int, int, var
#func SetPrjItemMeasOffset "_SetPrjItemMeasOffset@16" int, int, double
#func GetPrjItemUserTune "_GetPrjItemUserTune@12" int, int, var
#func SetPrjItemUserTune "_SetPrjItemUserTune@12" int, int, var
#func AddPrjItemInit "_AddPrjItemInit@16" int, sptr, var, var
#func AddPrjItemAnalyze "_AddPrjItemAnalyze@8" int, var
#func AddPrjItemTerm "_AddPrjItemTerm@8" int, var
#func SetAnalyzeInfo "_SetAnalyzeInfo@20" var, int, int, int, int
#func GetAnalyzeProgress "_GetAnalyzeProgress@12" var, var, var
#func CopyPrjItemEditPrm "_CopyPrjItemEditPrm@12" int, int, int
#cfunc GetMixSample "_GetMixSample@4" int
#func GetMixDataEx "_GetMixDataEx@52" int, var, int, int, int, int, int, int, int, int, int, double
#func ExportMixFile "_ExportMixFile@12" int, sptr, int
#func ExportMixFileInit "_ExportMixFileInit@16" int, var, sptr, int
#func ExportMixFileExp "_ExportMixFileExp@16" int, var, var, var
#func ExportMixFileTerm "_ExportMixFileTerm@8" int, var
#func CheckMixVolume "_CheckMixVolume@16" int, int, var, var
#func FadeWaveData "_FadeWaveData@16" var, int, int, int
#func GetFFTSpectrum "_GetFFTSpectrum@16" int, var, int, int
#func ReloadDoutWaveFile "_ReloadDoutWaveFile@12" int, int, sptr
#func CloseDoutWaveFile "_CloseDoutWaveFile@8" int, int
#cfunc GetII_orgSample "_GetII_orgSample@4" int
#func GetII_waveFormat "_GetII_waveFormat@20" int, var, var, var, var
#cfunc GetII_sampFreq "_GetII_sampFreq@4" int
#cfunc GetII_channel "_GetII_channel@4" int
#func GetII_fileName "_GetII_fileName@8" int, var
#cfunc GetII_SMFFlag "_GetII_SMFFlag@4" int
#cfunc GetII_editSample "_GetII_editSample@4" int
#func GetII_waveRange "_GetII_waveRange@24" int, int, int, int, int, var
#func GetII_waveRangeEx "_GetII_waveRangeEx@24" int, int, int, int, int, var
#cfunc GetII_ctrlPntPs "_GetII_ctrlPntPs@4" int
#cfunc GetII_nCtrlPnt "_GetII_nCtrlPnt@4" int
#cfunc GetII_nTctrlPrm "_GetII_nTctrlPrm@4" int
#cfunc GetII_AnalyzePrm "_GetII_AnalyzePrm@12" int, var, var
#cfunc GetII_AnalyzePrmEx "_GetII_AnalyzePrmEx@16" int, var, var, var
#cfunc GetIP_synthMode "_GetIP_synthMode@4" int
#func SetIP_synthMode "_SetIP_synthMode@8" int, int
#cfunc GetIP_synthOption "_GetIP_synthOption@4" int
#func SetIP_synthOption "_SetIP_synthOption@8" int, int
#cfunc GetIP_fadeInSample "_GetIP_fadeInSample@4" int
#func SetIP_fadeInSample "_SetIP_fadeInSample@8" int, int
#cfunc GetIP_fadeOutSample "_GetIP_fadeOutSample@4" int
#func SetIP_fadeOutSample "_SetIP_fadeOutSample@8" int, int
#func GetIP_EqGain "_GetIP_EqGain@12" int, var, var
#func SetIP_EqGain "_SetIP_EqGain@12" int, var, var
#func GetIP_HeqGain "_GetIP_HeqGain@8" int, var
#func SetIP_HeqGain "_SetIP_HeqGain@8" int, var
#func GetIP_tctrlTime "_GetIP_tctrlTime@16" int, int, var, var
#func SetIP_tctrlTime "_SetIP_tctrlTime@24" int, int, double, double
#func AddIP_tctrlTime "_AddIP_tctrlTime@20" int, double, double
#func DelIP_tctrlTime "_DelIP_tctrlTime@8" int, int
#cfunc GetIP_attackThr "_GetIP_attackThr@4" int
#func SetIP_attackThr "_SetIP_attackThr@8" int, int
#func DetectAttackTctrl "_DetectAttackTctrl@8" int, int
#cfunc GetIP_nNote "_GetIP_nNote@4" int
#func GetIP_noteData "_GetIP_noteData@24" int, int, var, var, var, var
#func SetIP_noteData "_SetIP_noteData@24" int, int, int, int, int, int
#func AddIP_noteData "_AddIP_noteData@16" int, int, int, int
#func DelIP_noteData "_DelIP_noteData@8" int, int
#func SetNotePitch "_SetNotePitch@4" int
#func DetectNote "_DetectNote@4" int
#func CreateNoteWeight "_CreateNoteWeight@20" int, var, int, int, var
#cfunc GetIP_nLabel "_GetIP_nLabel@4" int
#func GetIP_label "_GetIP_label@24" int, int, var, var, var, var
#func SetIP_label "_SetIP_label@24" int, int, int, int, var, int
#func AddIP_label "_AddIP_label@16" int, int, int, var
#func DelIP_label "_DelIP_label@8" int, int
#func SortIP_label "_SortIP_label@4" int
#cfunc GetICP_pit_analyze "_GetICP_pit_analyze@12" int, int, int
#func SetICP_pit_analyze "_SetICP_pit_analyze@16" int, int, int, int
#cfunc GetICP_pit_org "_GetICP_pit_org@8" int, int
#func SetICP_pit_org "_SetICP_pit_org@12" int, int, int
#cfunc GetICP_pit_edit "_GetICP_pit_edit@8" int, int
#func SetICP_pit_edit "_SetICP_pit_edit@12" int, int, int
#cfunc GetICP_frm "_GetICP_frm@8" int, int
#func SetICP_frm "_SetICP_frm@12" int, int, int
#cfunc GetICP_breathiness "_GetICP_breathiness@8" int, int
#func SetICP_breathiness "_SetICP_breathiness@12" int, int, int
#cfunc GetICP_brightness "_GetICP_brightness@8" int, int
#func SetICP_brightness "_SetICP_brightness@12" int, int, int
#cfunc GetICP_clearness "_GetICP_clearness@8" int, int
#func SetICP_clearness "_SetICP_clearness@12" int, int, int
#cfunc GetICP_Heq "_GetICP_Heq@8" int, int
#func SetICP_Heq "_SetICP_Heq@12" int, int, int
#func GetICP_dyn_org "_GetICP_dyn_org@12" int, int, var
#func SetICP_dyn_org "_SetICP_dyn_org@16" int, int, double
#func GetICP_dyn_edit "_GetICP_dyn_edit@12" int, int, var
#func SetICP_dyn_edit "_SetICP_dyn_edit@16" int, int, double
#func GetICP_vol "_GetICP_vol@12" int, int, var
#func SetICP_vol "_SetICP_vol@16" int, int, double
#func GetICP_pan "_GetICP_pan@12" int, int, var
#func SetICP_pan "_SetICP_pan@16" int, int, double
#cfunc GetICP_fix_org "_GetICP_fix_org@8" int, int
#func SetICP_fix_org "_SetICP_fix_org@12" int, int, int
#cfunc GetICP_fix_edit "_GetICP_fix_edit@8" int, int
#func SetICP_fix_edit "_SetICP_fix_edit@12" int, int, int
#func GetICP_wave "_GetICP_wave@12" int, int, var
#func GetStretchOrgSmp "_GetStretchOrgSmp@20" int, double, var, var
#func GetStretchEdtSmp "_GetStretchEdtSmp@20" int, double, var, var
#func GetStretchOrgSec "_GetStretchOrgSec@20" int, double, var, var
#func GetStretchEdtSec "_GetStretchEdtSec@20" int, double, var, var
#func CopyItemEditPrm "_CopyItemEditPrm@8" int, int
#func GetIP_fixThrDyn "_GetIP_fixThrDyn@12" int, var, var
#func SetIP_fixThrDyn "_SetIP_fixThrDyn@12" int, int, int
#func AnalyzeFixFlg "_AnalyzeFixFlg@12" int, int, int
#func UpdateRhythmTimeCtrl "_UpdateRhythmTimeCtrl@4" int
#func ReleaseItemSpcData "_ReleaseItemSpcData@4" int
#func InitItemSpcData "_InitItemSpcData@24" int, int, int, int, int, var
#func AnalyzeItemSpc "_AnalyzeItemSpc@12" int, int, int
#cfunc GetSpcRatio "_GetSpcRatio@4" int
#func SetSpcRatio "_SetSpcRatio@8" int, int
#cfunc GetSpcBlock "_GetSpcBlock@4" int
#func DrawGraph "_DrawGraph@36" bmscr, int, var, int, int, int, double, var
#func InitializeColorTable "_InitializeColorTable@0"
#func SetColorTable "_SetColorTable@8" int, int
#cfunc GetColorTable "_GetColorTable@4" int
#func SetWaveDecodeInfo "_SetWaveDecodeInfo@8" int, sptr
#func MergeSort_int "_MergeSort_int@12" var, var, int
#func MergeSort_double "_MergeSort_double@12" var, var, int
#func vslibSaveFile "_vslibSaveFile@12" sptr, var, int
#cfunc GetMidiInProcPtr "_GetMidiInProcPtr@0"
#cfunc GetMidiTime "_GetMidiTime@8" int, var
#func WaveCheckFormat "_WaveCheckFormat@16" sptr, var, var, var
#func GetWaveFormatError "_GetWaveFormatError@8" var, int
#func LoadSMF "_LoadSMF@16" sptr, int, int, int
#func AddLogData "_AddLogData@4" sptr
#cfunc GetLogDataMax "_GetLogDataMax@0"
#func GetLogData "_GetLogData@12" int, var, var
#func SetVsTempPath "_SetVsTempPath@8" sptr, int
#func LoadEngineDll "_LoadEngineDll@8" int, sptr
#func FreeEngineDll "_FreeEngineDll@0"
#func ClearItemTable "_ClearItemTable@0"
#cfunc CheckItemTable "_CheckItemTable@4" int
#cfunc UpdateItemTable "_UpdateItemTable@4" int
#cfunc WaitUpdateItemTable "_WaitUpdateItemTable@8" int, var

goto *main

#defcfunc vslib_getprjmastervolume int project_id
	volume = 1.0
	GetPrjMasterVolume project_id, volume
	return volume
#defcfunc vslib_getprjtempo int project_id
	tempo = 120.0
	GetPrjTempo project_id, tempo
	return tempo
#defcfunc vslib_gettrackvolume int project_id, int track_index
	volume = 1.0
	GetTrackVolume project_id, track_index, volume
	return volume
#defcfunc vslib_gettrackpan int project_id, int track_index
	pan = 0.0
	GetTrackPan project_id, track_index, pan
	return pan
#defcfunc vslib_gettrackname int project_id, int track_index
	sdim name, 260
	GetTrackName project_id, track_index, name
	return name
#defcfunc vslib_getprjitemoffset int project_id, int item_index
	offset = 0.0
	GetPrjItemOffset project_id, item_index, offset
	return offset
#defcfunc vslib_getprjitemfreqa4 int project_id, int item_index
	freq = 0.0
	GetPrjItemFreqA4 project_id, item_index, freq
	return freq
#defcfunc vslib_getprjitemmeasoffset int project_id, int item_index
	measure_offset = 0.0
	GetPrjItemMeasOffset project_id, item_index, measure_offset
	return measure_offset
#defcfunc vslib_getii_filename int item_index
	sdim name, 260
	GetII_fileName item_index, name
	return name
#defcfunc vslib_geticp_dyn_org int item_index, int ctrl_point_index
	original_dynamic = 0.0
	GetICP_dyn_org item_index, ctrl_point_index, original_dynamic
	return original_dynamic
#defcfunc vslib_geticp_dyn_edit int item_index, int ctrl_point_index
	original_dynamic = 0.0
	GetICP_dyn_edit item_index, ctrl_point_index, original_dynamic
	return original_dynamic
#defcfunc vslib_geticp_vol int item_index, int ctrl_point_index
	volume = 0.0
	GetICP_vol item_index, ctrl_point_index, volume
	return volume
#defcfunc vslib_geticp_pan int item_index, int ctrl_point_index
	pan = 0.0
	GetICP_pan item_index, ctrl_point_index, pan
	return pan
#defcfunc vslib_getstretchorgsmp int item_index, double seconds, var output
	original_sample = 0.0
	GetStretchOrgSmp item_index, seconds, original_sample, output
	return original_sample
#defcfunc vslib_getstretchedtsmp int item_index, double seconds, var output
	edited_sample = 0.0
	GetStretchEdtSmp item_index, seconds, edited_sample, output
	return edited_sample
#defcfunc vslib_getstretchorgsec int item_index, double seconds, var output
	original_second = 0.0
	GetStretchOrgSec item_index, seconds, original_second, output
	return original_second
#defcfunc vslib_getstretchedtsec int item_index, double seconds, var output
	edited_second = 0.0
	GetStretchEdtSec item_index, seconds, edited_second, output
	return edited_second
*main
	goto *post_getfilewritetime
#deffunc getfilewritetime str file_path, array time
	file_handle = CreateFileA(file_path, -2147483648, 1, 0, 3, 128, 0)
	if ( file_handle != (-1) ) {
		dim file_time, 4
		GetFileTime file_handle, 0, 0, varptr(file_time)
		CloseHandle file_handle
		dim local_file_time, 4
		FileTimeToLocalFileTime varptr(file_time), varptr(local_file_time)
		dim system_time, 4
		FileTimeToSystemTime varptr(local_file_time), varptr(system_time)
		repeat 8
			time(cnt) = wpeek(system_time, cnt * 2)
		loop
	}
	return
#defcfunc cnvtimestr array time
	return strf("%04d/%02d/%02d %02d:%02d:%02d", time(0), time(1), time(3), time(4), time(5), time(6))
#defcfunc chktime array first, array second
	date = cnvtimestr(first)
	clock = cnvtimestr(second)
	date_length = strlen(date)
	result = 0
	repeat date_length
		date_char = peek(date, cnt)
		clock_char = peek(clock, cnt)
		if ( date_char > clock_char ) {
			result = 1
			break
		}
		if ( clock_char > date_char ) {
			result = 2
			break
		}
	loop
	return result
*post_getfilewritetime
	goto *post_chkdll
#deffunc recoverproject str backup_path
	dialog "vshp", 17, "Project file"
	recoverable = stat
	proj_file_path = refstr
	if ( recoverable == 1 ) {
		ext_added = 0
		if ( getpath(proj_file_path, 2) == "" ) {
			proj_file_path = proj_file_path + ".vshp"
			ext_added = 1
		}
		exist backup_path
		if ( strsize > 0 ) {
			overwritten = 0
			exist proj_file_path
			if ( strsize > 0 & ext_added == 1 ) {
				dialog "Overwrite?", 2
				if ( stat == 6 ) {
					overwritten = 1
				}
			}
			else {
				overwritten = 1
			}
			if ( overwritten == 1 ) {
				bcopy backup_path, proj_file_path
			}
		}
		else {
			dialog "No recoverable project files."
		}
	}
	return
*post_chkdll
	exist dirinfo(0) + "\\vslib.dll"
	if ( strsize <= 0 ) {
		dialog "Copy this tool to the folder where VocalShifter is installed and try again."
		end
	}
	sdim temp_path, 260
	GetTempPathA 260, temp_path
	temp_dir_path = temp_path + "vocalshifter_tmp\\"
	backup1_path = temp_dir_path + "backup1.vshp"
	dim backup1_time, 8
	exist backup1_path
	if ( strsize > 0 ) {
		getfilewritetime backup1_path, backup1_time
	}	
	else {
		backup1_path = ""
	}
	backup2_path = temp_dir_path + "backup2.vshp"
	dim backup2_time, 8
	exist backup2_path
	if ( strsize > 0 ) {
		getfilewritetime backup2_path, backup2_time
	}
	else {
		backup2_path = ""
	}
	if ( backup1_path == "" & backup2_path == "" ) {
		dialog "No recoverable project files."
		end
	}
	dim proc_id, 4096
	proc_id_size = length(proc_id) * 4
	EnumProcesses proc_id, proc_id_size, proc_id_size
	proc_count = proc_id_size / 4
	temp_proj_path = ""
	dim temp_proj_time, 8
	repeat 4
		pid_index = cnt
		pid_path = temp_dir_path + "vstmp_" + pid_index + ".pid"
		exist pid_path
		if ( strsize == 4 ) {
			proc_id_from_path = 0
			bload pid_path, proc_id_from_path, 4, 0
			proc_running_flag = 0
			repeat proc_count
				if ( proc_id(cnt) == proc_id_from_path ) {
					proc_running_flag = 1
					break
				}
			loop
			if ( proc_running_flag == 1 ) {
				continue
			}
		}
		sdim dir_listing_flag, 260
		notesel dir_listing_flag
		chdir temp_dir_path
		dirlist dir_listing_flag, "vstmp_" + pid_index + "_*.vshp", 1
		file_count = noteinfo(0)
		sdim listed_file_name
		dim listed_file_time, 8
		repeat file_count
			noteget listed_file_name, cnt
			listed_file_name = temp_dir_path + listed_file_name
			getfilewritetime listed_file_name, listed_file_time
			if ( temp_proj_path == "" ) {
				temp_proj_path = listed_file_name
				repeat 8
					temp_proj_time(cnt) = listed_file_time(cnt)
				loop
			}
			else {
				if ( chktime(listed_file_time, temp_proj_time) == 1 ) {
					temp_proj_path = listed_file_name
					repeat 8
						temp_proj_time(cnt) = listed_file_time(cnt)
					loop
				}
			}
		loop
	loop
	screen 0, 770, 240
	title "VocalShifter Project File Recovery Tool ver.1.31"
	syscolor 15
	boxf
	syscolor 9
	x_pos = 10
	y_pos = 10
	pos x_pos, y_pos
	mes "[Projects not saved]"
	mes "Restore and save projects that were not saved when creating, opening, or exiting VocalShifter."
	pos x_pos, y_pos + 50
	if ( backup1_path != "" ) {
		mes "Backup time: " + cnvtimestr(backup1_time)
		objsize 80, 22
		pos x_pos + 400, y_pos + 50
		button gosub "Save", *save_backup1_proj
	}
	else {
		mes "No recoverable projects."
	}
	x_pos = 10
	y_pos = 110
	pos x_pos, y_pos
	mes "[Projects being edited when an abnormal termination occurred]"
	mes "Restore and save projects that were being edited when VocalShifter terminated abnormally."
	pos x_pos, y_pos + 50
	if ( temp_proj_path != "" ) {
		mes "Backup time:" + cnvtimestr(temp_proj_time)
		objsize 80, 22
		pos x_pos + 400, y_pos + 50
		button gosub "Save", *save_latest_temp_proj
	}
	else {
		mes "No recoverable projects."
	}
	stop
*save_backup1_proj
	recoverproject backup1_path
	return
	recoverproject backup2_path
	return
*save_latest_temp_proj
	recoverproject temp_proj_path
	return
